cd .vim/
mkdir syntax
nvim syntax/markdown.vim
nvim ./Documents/Wiki/diary/2020-04-08.md --startuptime temp
vim ~/Documents/Wiki/plan/Weekly_Outcome/$(gdate -d last-sunday +%F).md 
nvim ./pack/minpac/opt/nord-vim/colors/nord.vim 
nvim ./.vim/pack/minpac/opt/mkdx/after/syntax/markdown/mkdx.vim 
nvim ./.vim/pack/minpac/opt/nord-vim/colors/nord.vim 
exir
vmd --list-highlight-theme
vmd --list-highlight-themes
mkdir -p vmd
nvim vmd/.vmdrc
nvim ./Documents/Wiki/log.md 
z wiki
nvim ./Documents/Wiki/diary/template.md --startuptime temp
fg
rm ;
rm '\
gst
rm \'
gdf 2
kear
git diff routers/api/v1/news_categories/controller.go
git diff routers/api/v1/news_categories/model.go
gcb fix/news_categories/delete
git commit -m "[FIX] cannot delete news categories"
git push origin fix/news_categories/delete 
git branch -D fix/news_categories/delete 
git branch -D origin/feat/pagination 
git checkout feat/center-data-drive
git checkout -b feat/center-data-drive
git pull origin master
sql-migrate new create_center_data_drive_tables
touch ~/.pgpass
fkd
sql-migrate drop
nvim ./migrations/postgresql/20200408153228-create_center_data_drive_tables.sql 
nvim ./migrations/postgresql/20200408153228-create_center_data_drive_tables.sql  --startuptime
nvim tempp
nvim ./migrations/postgresql/20200408153228-create_center_data_drive_tables.sql  --startuptime temp
nvim ./migrations/postgresql/20200408153228-create_center_data_drive_tables.sql
nvim temp.json
rm temp.json
~
0
+====--==
nvim ./ftplugin/go.vim 
nvim vim/.vimrc
.vim
nvim temp.md --startuptime temp
nvim 
thyme
thyme -d 
nvim temp.md
gem install thyme
vim .thymerc
nvim .thymerc
nvim ./dotfiles/zsh/.zshenv 
vim 
tmu
thyme -d
gem uninstall thyme
go get github.com/justincampbell/tmux-pomodoro
nvim dotfiles/vim/.vimrc
z minpac
nvim .tmux.conf
mv .vimrc .config/nvim/
mv .config/nvim/.vimrc vimrc
cd .config/nvim
mv vimrc .config/nvim
z /Users/yikkai95/.config/nvim
cp vimrc .vimrc
mv .config/nvim/.vimrc .local/share/nvim/site
mv .local/share/nvim/site/.vimrc 
mv .local/share/nvim/site/.vimrc  .vimrc
rm -rf vimwiki
cp ~/.local/share/nvim .
cp -rf ~/.local/share/nvim .
mkdir -p .local/share
mv nvim .local/share
mv ~/.local/share/nvim ~/.local/share/nvim.new
cd ~/.local/share/
mv nvim.* ~/.Trash
man vifm
vifm
rm vifm
rm -rf vifm
rm init.vim pack spell
mv .vim.bak .Trash
rm dbext_sql_history.txt
rm .thymerc
git clone https://github.com/k-takata/minpac.git \\
    ~/.config/nvim/pack/minpac/opt/minpac
mv .vimrc dotfiles/vim/
cd..
mv ~/.config/nvim .
stow nvim
rm -rf .vim
mv ~/.gvimrc .
rm .gvimrc
stow vim
man gcalcli 
man tmix
man rg
man git
ls- la
nvim Documents/Wiki/index.md --startuptime temp
mv nvim nvim.new
mkdir -p nvim/site
rm nvim/site
rm -r nvim/site
ls -la nvim
mv nvim.new nvim/site
ls nvim/site
nvim ./Documents/Wiki/diary/2020-04-08.md 
mv nvim nvim.bak
cd nvim.bak/
cp ~/.vim ./nvim
cp -r ~/.vim ./nvim
mv .vim .vim.bak
nvim ~/.config/nvim/init.vim
cd nvim
mv temp temp.sh
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/minpac\

git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/minpac -f\

git rm --cached nvim/.local/share/nvim/site/pack/minpac/start\

git rm --cached nvim/.local/share/nvim/site/pack/minpac -r\

git rm --cached nvim/.local/share/nvim/site/pack/minpac -rf\

zsh temp.sh
git submodule add https://github.com/k-takata/minpac nvim/.local/share/nvim/site/pack/minpac/opt/minpac/
rm temp.sh
vim nvim/.local/share/nvim/shada/main.shada
nvim nvim/.local/share/nvim/vim-lsp.log
git commit -m "[IMP] custom nvim and vim config"
git push origin master
tmux-pomodoro start
cd go
cd .local/share/nvim/site/pack/
z go
which tmux-pomodoro
tmux-pomodoro
kill 96437 
kill 97589 
kill 96887 
man sh
man test
kill 2307 
kill 21420 
kill 40970 
kill 48542 
kill 51496 
git add migrations/postgresql/20200408153228-create_center_data_drive_tables.sql routers/api/v1/center_data_folders/ temp.md
git commit -m "temp commit"
gcb fix/orders/pagination
git commit -m "[FIX] null center appears on orders filter"
git push origin fix/orders/pagination 
git branch -D fix/orders/pagination 
git remote prune origin 
nvim ./dotfiles/nvim/.local/share/nvim/site/plugin/completion.vim 
nvim ./dotfiles/nvim/.local/share/nvim/site/plugin/lsp.vim
nvim ./dotfiles/nvim/.local/share/nvim/site/plugin/completion.vim
cd ./dotfiles/nvim/.local/share/nvim/site/
rg omnifunc
cd.
nvim ./dotfiles/nvim/.local/share/nvim/site/ftplugin/go.vim
nvim ./dotfiles/nvim/.local/share/nvim/site/plugin/lsp.vim 
kill 98072 
kill 98493 
kill 98913 
kill 94573  
kill 99182 
kill 99568 
kill 99762 
kill 246 
mkdir -p .config/pomodoro
mv temp .config/pomodoro
cd .config/pomodoro
mv temp task
which sh
o+x temp.sh
chmod o+x temp.sh
ls -la temp.sh
chmod u+x temp.sh
Zkjj
i
man vim
jkkjj
kjkk

k
kjj

pomodoro " 10s"
./temp.sh
mv temp.sh Scripts/pomodoro.sh
./Scripts/pomodoro.sh
nvim .config/pomodoro/task
pomodoro -simple
pomodoro
pomodoro 1m
pomodoro 10s
brew install noti
noti pomodoro 1m
man noti
nvim temp.sh
go get github.com/carlmjohnson/pomodoro
man exit
z .vim
cd .
ls -la | grep vim
cd .vim
ls -al
cd. .
A
echo "- [Use Case Listing](#Use Case Listing)\
" | sed -e 's/#\w+'
echo "- [Use Case Listing](#Use Case Listing)\
" | sed -e 's/(#\w+)\s/$1-/p
echo "- [Use Case Listing](#Use Case Listing)\
" | sed -e 's/(#\w+)\s/$1-/p'
"- [Use Case Listing](#Use Case Listing)\
" | sed -e 's/(#\w+)\s/$1-/p'
echo "- [Use Case Listing](#Use Case Listing)\
" | gsed -e 's/(#\w+)\s/$1-/p'
echo "- [Use Case Listing](#Use Case Listing)\
" | gsed -e 's/(#\w+)\s/$1/p'
echo "- [Use Case Listing](#Use Case Listing)\
" | gsed -e 's/(#\w+)/$1/p'
echo "- [Use Case Listing](#Use Case Listing)\
" | gsed -e 's/(#\w+)/$1/g'
man zshoptions
vim ~/.config/pomodoro/task
/margin
pandoc -s -o ccd.pdf ./routers/api/v1/center_data_folders/doc.md 
open ccd.pdf
git reset head temp.md
vim temp.md
rm temp.md
git rm --cached temp.md
pd
mv ccd.pdf ~/Desktop
git reset --soft head~2
git reflog
git reset --hard 100349a
vim .rgignore
echo .git >> .rgignore
echo .git >> .fdignore
mkdir -p ./routers/api/v1/center_data_folders/docs
mv temp.md ./routers/api/v1/center_data_folders/docs
z /Users/yikkai95/.config/zsh
nvim .zsh_history
pandoc -s -V geometry:margin=1in -o doc.pdf ./routers/api/v1/center_data_folders/doc.md 
z Wiki
rg regex
nvim diary/2019-11-05.md
nvim ./routers/api/v1/center_data_folders/docs/temp.md 
rm ./routers/api/v1/center_data_folders/docs/temp.md 
git commit -m "[DOC] update design document"
git push origin feat/center-data-drive 
git push origin feat/center-data-drive  -f
gcb feat/center-data-drive 
mpv --no-terminal https://www.youtube.com/playlist\?list\=PLZYLEYEpehlk4Z4Pi7kY5DS6R_iKW-jvx &
nvim ./.config/zsh/.zshrc 
z config
nvim alacritty/alacritty.yml
cd nvim/.local/share/nvim/site/pack/minpac/opt/vimwiki
z /Users/yikkai95/dotfiles
git branch
git branch -A
git branch -a
git checkout origin/dev 
nvim ./dotfiles/alacritty/.config/alacritty/alacritty.yml 
stow macvim
vim .gvimrc
git clone git@github.com:iaolo/iA-Fonts.git
cd iA-Fonts/iA\ Writer\ Duospace/OTF\ \(Mac\)/
open .
gcalcli agenda
gcalcli agenda --tsv $(date +%F) $(date -v+1d +%F) | awk 'BEGIN {FS="\t"}; {print $1 " " $5}'
sed -n '/### Weekly Outcome/,/^###/p' ~/Documents/Wiki/plan/Weekly_Outcome/$(gdate -d last-sunday +%F).md | ghead -n -2 | tail -n +2
rm .DS_Store
rm *.DS_Store
rm */.DS_Store
git add routers/api/v1/center_data_folders/doc.md  doc.pdf
git commit -m "temp"
gcb fix/orders/rql
git add ./routers/api/v1/centers
git commit -m "[FIX] consultant is returned null "
git add routers
git commit -m "[]"
git push origin fix/orders/rql 
git branch -D fix/orders/rql 
nvim .vimrc
vim ~/Scripts/pomodoro.sh
open routers/api/v1/center_data_folders/docs/media/erd.png/
open /Users/yikkai95/Project/ark/routes/api/v1/center_data_folders/docs/media/erd.png
man pandoc
rm **.DS_Store
rm **/.DS_Store
open doc.pdf
pandoc -s -V geometry:margin=1in -o doc.pdf ./routers/api/v1/center_data_folders/docs/index.md --resource-path=./routers/api/v1/center_data_folders/docs -f markdown
pandoc -s -V geometry:margin=1in -o doc.pdf ./routers/api/v1/center_data_folders/docs/index.md --resource-path=./routers/api/v1/center_data_folders/docs -f gfm
pandoc -s -V geometry:margin=1in -f gfm -o doc.pdf ./routers/api/v1/center_data_folders/docs/index.md --resource-path=./routers/api/v1/center_data_folders/docs
pandoc -s -V geometry:margin=1in -o doc.pdf ./routers/api/v1/center_data_folders/docs/index.md --resource-path=./routers/api/v1/center_data_folders/docs
pandoc -s -V geometry:margin=1in -o doc.pdf ./routers/api/v1/center_data_folders/docs/index.md
mv ./routers/api/v1/center_data_folders/docs/media/erd.png ./routers/api/v1/center_data_folders/docs/
nvim .gvimrc
man macvim
man mvim
mkdir -p dotfiles/macvim
eit
man bundle
ll
man psql
dlv
which dlv
dlv help
man dlv
echo XDG_CONFIG_HOME
gem env
echo $GEM_HOME
.multirust
.rustup
rm -rg .rustup .multirust/
rm -rf .rustup .multirust/
nvim .pgpass
_FASD_DATA="$HOME/.cache/fasd/.fasd"\

echo $_FASD_DATA
man fasd
mv .cache/fasd/.fasd ~
vim .fasd
man cargo
cargo --help
brew list hledger
which hledger
_cabal
rm -rf .stack
rm .local/bin/stack 
which stack
sudo rm -rf /Library/Frameworks/GHC.framework
sudo rm -rf /Library/Frameworks/HaskellPlatform.framework
sudo rm -rf /Library/Haskell
rm -rf .cabal
rm -rf .ghc
rm -rf ~/Library/Haskell
find /usr/bin /usr/local/bin -type l | \\
   xargs -If sh -c '/bin/echo -n f /; readlink f' | \\
   egrep '//Library/(Haskell|Frameworks/(GHC|HaskellPlatform).framework)' | \\
   cut -f 1 -d ' ' > /tmp/hs-bin-links
sudo rm `cat /tmp/hs-bin-links`
cat /tmp/hs-bin-links
rm /tmp/hs-bin-links
rm -rf ~/.cabal
rm -rf ~/.ghc
which rustr
which rustc
brew info rustc
z /Users/yikkai95/repo
ls -la | cargo
ls -la | grep cargo
c d
cargo uninstall
vim rust.sh
rm -rg .stack
sudo rustup self uninstall
curl https://sh.rustup.rs -sSf | sh
nvim rustup-init.sh
sudo /usr/lib/rustlib/uninstall.sh
rustc --version
brew info rust
brew uninstall rust
sh rustup-init.sh --uninstall
sh rustup-init.sh
ls -la | grep rust
rustup self uninstall
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustup
which rustdoc
which rust-lldb
cargo clean
rm .cargo
rm -rf .cargo
vim /etc/gemrc
cd /usr
rg rust
rg rustc
gcalcli
gcalcli --config-folder .config/gcalcli
gcalcli --config-folder .config/gcalcli calw
gcalcli --config-folder .config/gcalcli --noauth_local_webserver calw
gcalcli -h
gcalcli 
man gcalcli
gcalcli cal
gcalcli calw
echo Repo >> .rgignore
echo .local >> .rgignore
echo go >> .rgignore
echo .stack >> .fdignore
nvim dotfiles/macvim/.gvimrc
man rvm
react-native -h
react-native --version
z repo
ls -la | fasd
ls -la | grep fasd
echo $XDG_CONFIG_HOME
nvim ./dotfiles/zsh/.zshenv ./dotfiles/zsh/.zshrc ./.config/zsh/.zprofile 
vexit
mpv --loop --no-terminal https://www.youtube.com/playlist\?list\=PLZYLEYEpehlkHsdK0zI7aAvEsNWF243jL &
rm ls temp time 
rm package-lock.json
git diff .rgignore
echo .rgignore >> .gitignore
vim .gitignore
cler
claer
git rm --cached .rgignore
gcb imp/ui-template
git commit -m "[IMP] first UI template implementation"
gs
git diff ./src/components/practice2.js 
vim $HOME/.config/pomodoro/task
sh ~/Scripts/pomodoro.sh
vim ls
git commit -m "[FEAT] applied new practice template to short vowel practice 2"
git checkout routers/api/v1/centers/routers.go
rm ls .DS_Store
git add ./routers/api/v1/center_data_folders/
mc routers/api/v1/center_data_folders/docs/erd.png routers/api/v1/center_data_folders/docs/media/erd.png
mv routers/api/v1/center_data_folders/docs/erd.png routers/api/v1/center_data_folders/docs/media/erd.png
git add routers/api/v1/center_data_folders/docs/erd.png
git add routers/api/v1/center_data_folders/docs/media/
vim routers/api/v1/center_data_folders/docs/index.md
rm routers/api/v1/center_data_folders/doc.md
git add routers/api/v1/center_data_folders/doc.md
git commit -m "[FEAT] complete documentation"
git stash
echo .fdignore >> .gitignore
git add routers/api/v1/news
git add routers/api/v1/news_categories/model.go
git commit -amend --no-edit
git commit --amend --no-edit
git reset doc.pdf
git checkout routers/api/v1/news/controller.go
git rm doc.pdf
git reset head routers/api/v1/news/controller.go
rm .fdignore
git stash pop
git reset head doc.pdf
rm doc.pdf
git fetch
git reset --hard origin/master
git commit -am "[FIX] news cannot update"
npm install typescript@latest --save-dev
man npm
npm help 
npm -l
yarn add typescript -D
yarn add tsserver -D
tsserver 
npm uninstall -g typescript-language-server
npm -g uninstall typescript
yarn global uninstall typescript-language-server
yarn uninstall typescript
brew info typescript-language-server
npm uninstall typescript-language-server
npm -g uninstall typescript-language-server
npm -g remove typescript-language-server
cd /usr/local/bin/
ls -la | grep typescript
cd ~/.config/yarn
cd global
npm -g i typescript
yarn global add typescript
cd /Users/yikkai95/.config/yarn/global/node_modules/.bin
ls- la | grep type
cd Users/yikkai95/.config/yarn/global/node_modules/.bin/
cd /Users/yikkai95/.config/yarn/global/node_modules/.bin/
nvim ./src/routes.js 
nvim ./src/screens/ShortVowel/Practice02/index.js 
mv ../jsconfig.json .
nvim ./src/screens/ShortVowel/Practice01/game.js
nvim ./src/screens/ShortVowel/Practice01/index.js
which typescript-language-server
cd /usr/local/bin
ls -la | grep type
vim ../../../Users/yikkai95/.config/yarn/global/node_modules/.bin/typescript-language-server
cd ../../../Users/yikkai95/.config/yarn/global/node_modules/.bin/
-
rm typescript-language-server
yarn global add typescript-language-server
typescript-language-server
typescript-language-server stdio
typescript-language-server --stdio
yarn add typescript
tsserver
typescript-language-server --stdio --log-level 4
yarn global remove typescript-language-servier
yarn global remove typescript-language-server
yarn remove typescript
vim yarn.lock
yarn remove typescript-language-server
git diff package.json
vim jsconfig.json
nvim ./src/screens/ShortVowel/Practice01/index.js 
nvim ./src/screens/ShortVowel/Practice01/game.js 
cd /Users/yikkai95/.cache/nvim/nvim_lsp/tsserver
ls -a
nvim ./index.js 
z site
rg javascript
nvim lua/nvim_lsp/tsserver.lua
z pwk
yarn add typescript-language-server -D
nvim ./react-native.config.js 
git commit -m "[IMP] apply Pracitce HOC"
git commit --amend
rm ls
git commit -m "[IMP] apply new practice template to SW-P4 "
mv jsconfig.json ..
yarn ios
yarn start
open ./Downloads/proposal.pdf 
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/goyo.vim\

git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/goyo.vim -f\

git submodule add git@github.com:junegunn/goyo.vim.git nvim/.local/share/nvim/site/pack/minpac/opt/goyo.vim\

git commit -m "Regular Updates 2020-04-12"
gdf
git diff rclone/.config/rclone/rclone.conf
man adb
adb help
cd ~/Library
mkdir -p "$XDG_DATA_HOME"/vim/{undo,swap,backup}
mkdir -p "$XDG_CACHE_HOME"/less
cd ~/.cache/less
mv ~/.lesshst ~/.cache/less
mv ~/.cache/less/.lesshst ~/.cache/less/history
vim .vimrc
brew remove rbenv
brew uninstall rbenv
rm -rf ~/.rbenv
brew info tldr
tldr -v
tldr --version
tldr tldr
hash pod
nvi
nnn
cd vim
vim nvim/.config/nvim/init.vim
vim .config/nvim/init.vim
echo $VIMRUNTIME
nvim --startuptime
z nvim
vim init.vim
echo $VIMCONFIG
vi
nvvim
nvim nvim/init.vim
vim nvim/init.vim
nvim vim/config.vim
vim vim/config.vim
rm nvim
cd share/vim
rm *tmp.a
rm *tmp
rm *.tmp
rm *.tmp.*
vim viminfo
newsboat
pwk
vim .terminfo
rm .terminfo
ls -la | grep ter
mv .viminfo .cache/nvim/info
vim .viminfo
rm .viminfo
nvim --startuptime tmep
vim tmep
vim dotfiles/tmux/.config/tmux/.tmux.conf
vim .ctags
mv .ctags .config/ctags/config
vim .config/ctags/config
rm -rf .terminfo
sudo rm -rf .terminfo
ls -la | grep termin
mv ~/.local/share/nvim/shada/main.shada .Trash
mv ~/.local/share/vim/*.tmp* .Trash
vim .config/vim/config.vim
man ctags
man fd
cd dotfiles
stow tmux
cd dotfiles/tmux
ls -la | 
nvim gruvbox-dark.itermcolors
t
vim .config/tmux/.tmux.conf
ls -0la
vim ~/Desktop/gruvbox-material.itermcolors
open ~/Desktop/gruvbox-material.itermcolors
nvim ~/Desktop/gruvbox-material.itermcolors
nvim .config/tmux/tmux.conf
nvim .config/tmux/.tmux.conf
mv tmux.conf tmux.conf.bak
mv .tmux.conf tmux.conf
vim ~/.config/vim/config.vim
nvim --startuptime tewmp
nvim tewmp
man tmux
source .config/zsh/.zshrc
mv tmux.conf.bak ..
ark
exut
z tmux
nvim tmux.conf
pg_ctl -D /usr/local/var/postgres start
gdf 
gdf 1
git diff 
git checkout .
git diff routers/api/v1/news/controller.go
git add routers/api/v1/news/controller.go
git diff routers/api/v1/news/model.go
git add routers/api/v1/news/model.go
git add routers/api/v1/news/validator.go
gcb fix/news/update
git commit -m "[FIX] cannot update news due to unasigned site id"
git push origin fix/news/update 
git branch -D fix/news/update 
https://stackoverflow.com/questions/13415037/clear-the-output-of-old-external-command-in-vim
z bim
z vim
cd ~/Downloads && ssh -i new_ark_be_staging ubuntu@ark-api-staging.aciso-suite.com
psql
vim ~/.config/tmux/tmux.conf
psql kms_dev
gcb feat/news/time-parse
sql-migrate redo
git diff migrations/postgresql/20200324150224-create_ark_site_news_tables.sq
git diff migrations/postgresql/20200324150224-create_ark_site_news_tables.sql
git diff routers/api/v1/news/validator.go
st
git commit -m "[FEAT] start at and end at should be stored using utc"
git push origin feat/news/time-parse 
git branch -D feat/news/time-parse 
git remote prune origin
gcb fix/news/time-format
sql-migrate new alter_ark_site_news_time_type
sql-migrate status
sql-migrate down
sql-migrate up
git commit -m "[FIX] change news end_at and start_at format"
git push origin fix/news/time-format 
gcm
git branch -D fix/news/time-format 
git pull
git checkout feat/center-data-drive 
git log
git pull origin master --revase
git pull origin master --rebase
nvim ./routers/api/v1/news/model.go 
rm tewmp
exi
top
htop
n Library/Application\ Support/iTerm2/
mkdir iterm
cd iterm
vim com.googlecode.iterm2.plist
exit\

source ~/.zshenv
gin -i run main.go
a
d
which z
cd .config/tmux
tldr ls
npm list tldr
npm list tldr -g
npm uninstall tldr -g
npm list -g
yarn global list
brew install tealdeer
tldr list
man tldr
tldr help
tldr --help
tldr --update
tldr imgcat
vim .zshenv
vim zsh
rm .zshenv
stow Project/dotfiles/zsh
stow zsh
stow -d Project/dotfiles -t .
stow -d Project/dotfiles -t . zsh
echo $ZSH_CACHE_DIR
cd .config/zsh/.oh-my-zsh/cache
vim fasd-init-cache
brew info fasd
brew uninstall fasd
brew remove fasd
s
f
echo $XDG_RUNTIME_DIR
mkdir .local/lib
mv go .local/lib
cd Downloads
mv .npm .cache
cd .cache
mv .npm npm
cd ...
cd yikkai95
cd Project
rm .zshenv .zshrc
chmod u+rw ledger
chmod u-x ledger
chmod uog-x ledger
chmod og-r ledger
chmod u+r ledger
chmod o+r ledger
chmod g+r ledger
chmod u+x ledger
cd ledger
hledger help
hledger hledger
hledger help hledger
hledger help hledger-web
less
man hledger
cd
cd Repo/
git clone https://github.com/whjvenyl/fasd
cd fasd/
git remote -v
vim Makefile
make install
mv .fasd .cache/fasd
z
cd .local
cd share
mv .rvm .local/share/rvm
cd .local/share
cd rvm
cd $XDG_DATA_HOME/rvm/scripts/extras
vim rvm
export $RVM_PATH=$XDG_DATA_HOME/rvm
export RVM_PATH=$XDG_DATA_HOME/rvm
rvm
./rvm
export rvm_path=$XDG_DATA_HOME/rvm
./rvm list
./rvm 
vim /Users/yikkai95/.local/share/rvm/bin/rvm
nivm .zshenv
echo $PATH | grep gem
nvim ~/.zshenv
cd .local/share/gem
echo $rvm_path
which jekyll
rvm help
rvm 
rvm gemdir
cd .config/
mkdir gem
cd gem
nvim config
vim /Users/yikkai95/.local/share/ruby/gems/2.6.0/bin
vim /Users/yikkai95/.local/share/gem/ruby/gems/2.6.0/bin
/Users/yikkai95/.local/share/gem/ruby/gems/2.6.0/bin
ruby -e 'puts RbConfig::CONFIG["ruby_version"]'
ls -la | grep rvm
ls -la | grep gem
cd .config/gem/
vim config
vim /Users/yikkai95/.local/share/gem/ruby/2.6.0/bin
rvm use 2.60
RUBY_VERSION
rvm use default
ruby -v
rvm list known
rm default
ln -sf /Users/yikkai95/.local/share/rvm/rubies/default /Users/yikkai95/.local/share/rvm/rubies/ruby-2.5.1 
man ln
ln -s /Users/yikkai95/.local/share/rvm/default /Users/yikkai95/.local/share/rvm/rubies/ruby-2.5.1 
ln -s /Users/yikkai95/.local/share/rvm/rubies/default /Users/yikkai95/.local/share/rvm/rubies/ruby-2.5.1 
rvm uninstall 2.5.1
rm -rf ruby-2.5.1
sudo rm -rf ruby-2.5.1
rvm install 2.6.0
which gem
gem -v
which ruby
cd $rvm_path
cd bin
echo $PATH
nvim /etc/profile
nvim /etc/bashrc
nvim /etc/zshrc
which rvm
exot
nvim ~/.config/vim/config.vim
git clone https://github.com/Lissy93/minimal-terminal-prompt.git ~/.oh-my-zsh/custom/themes
cd .Trash
ls -la | grep oh
nvim oh-my-zsh.sh
cd plugins
cd example
git clone https://github.com/Lissy93/minimal-terminal-prompt.git $ZSH/custom/themes
git clone https://github.com/Lissy93/minimal-terminal-prompt.git $ZSH/custom/themes/minimal-terminal-prompt
cp minimal-terminal-prompt/minimal-terminal-prompt.* .
cd .oh-my-zsh/custom/themes
rm *
vim .config/zsh/.zshrc
echo $conda_prefix
git checkout echo $CONDA_PREFIX
echo $CONDA_PREFIX
cd .oh-my-zsh/custom/themes/
rm -rf minimal-terminal-prompt
vim nord.zsh-theme
cd .config/zsh/.oh-my-zsh/
curl -Lo install.sh https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
vim install.sh
mv .oh-my-zsh ~/.Trash
sh install.sh 
cd .oh-my-zsh
z .config
cd zsh/.oh-my-zsh/themes
ls -la 
ls -la | grep dracula
stow -t $HOME alacritty
stow -t $HOME android
stow ctags
cd ctags
mkdir ctags
cp config index.ctags ctags
stow -d $HOME ctags
stow -t $HOME ctags
stow -t $HOME exercism
stow -t $HOME fd
stow -t $HOME gcalcli
stow -t $HOME
stow -t $HOME .
stow -t $HOME -D .
stow -t $HOME gcalcli gem iterm lf mpv npm ripgrep rvm spotify vim wtf yarn youtube zsh 
stow -t $HOME ripgrep
rvm info
rvm list gemsets
rvm gemsets
mkdir -p .config/rvm/
nvim .config/rvm/config
export rvm_config_path=.config/rvm/config
rvm install "ruby-2.6.0"
rvm default
jekyll -v
cd .local/share/rvm/rubies
ls-la
rvm use 2.6
rvm use 2.6.0
which jekyll 
rvm list
cd .subversion
echo $rvm_config_path
nvim .zshen
nvim --startuptime temp
nvim temp
nvim .config/vim/config.vim
nvim --startuptime temp2
nvim -O temp2 temp
nvim temp2
z /Users/yikkai95/.config/vim
vim config.vim
rm /Users/yikkai95/.local/share/nvim/rplugin.vim
nvim --startuptime temp3
nvim temp3 
nvim config.vim
lf
tmux attach
cp Project/dotfiles/tmux/.config/tmux/tmux.conf .config/tmux
cp Project/dotfiles/tmux/.config/tmux/tmux.conf .config/tmux/
vim temp
rm temp
mkdr tmux
ls la
ls -l
pwd
rm temp temp2
stow -d Project/dotfiles -t . tmux
z dotfiles
ls -la | grep tmux
cd tmux
cd .config
mv tmux.conf.bak ~/.Trash
man stow
cd .config/tmu
rm .config/tmux
stow -d Project/dotfiles -t $HOME tmux
cd .config/tmux/
vim tmux.conf
vim .Trash/tmux.conf.bak
vim .config/tmux/tmux.conf
rm -rf .oh-my-zsh
rm .zshrc
z oh
vim oh-my-zsh.sh
zprog
cd .config/zsh
zprof
zsh -xv
zsh -i -c exit
time zsh -i -c exit
zsh
nvim .zshenv
d zsh
nvim .zshrc
z zsh
nvim .config/zsh/.oh-my-zsh/custom/themes/nord.zsh-theme
nvim .config/zsh/.oh-my-zsh/custom/themes/
rg fg_bold
source .zshenv
vim /Users/yikkai95/.config/zsh/.oh-my-zsh/lib/term-and-appearance.zsh
cd .config/zsh/.oh-my-zsh/lib
z ark
cd Project/ark
time
which time
bash
nvim .config/zsh/.zshrc
cd .config/zsh/.oh-my-zsh
rg ZSH_THEME_GIT_PROMPT_CLEAN | fzf
vim lib/theme-and-appearance.zsh
nvim ../.zshrc
/usr/bin/time zsh -i -c exit
sh
l
wxit
z ledger
cd Project/ledger/2020/
vim budget.ledger
echo node_modules >> .gitignore
git reset --hard *node_modules
git reset --hard */node_modules
git reset --hard **/node_modules
git reset head **/node_modules
nvim ./zsh/.zshenv 
tmx
tmux
rm ~/.config/android
mv android/.config/android ~/.config
ls ~/.config
ls -la ~/.config
git rm --cache android
git rm --cache -r android
git rm --cache tmux/.config/tmux/plugins/*
git rm --cache tmux/.config/tmux/plugins/* -f
vim .gitmodules
git rm --cache nvim/.config/nvim
git rm --cache nvim/.local/share/nvim/site/pack/minpac/opt/goyo.vim
git rm --cache nvim/.local/share/nvim/site/pack/minpac/opt/limelight.vim
git rm --cache nvim/.local/share/nvim/site/pack/minpac/opt/minpac
git submodule foreach -q git config remote.origin.url
nvim .git/config
cd nvim/.local/share/nvim/site/pack/minpac/opt/goyo.vim/
cd 
git rm --cache nvim/.local
git rm --cache nvim/.local -r
n
cd htop/.config/htop/htoprc
git reset head 
git submodule sync
git submodule update --init --recursive --remote
nvim .gitmodules
vim .git/config
git submodules ls
git submodule ls
clear
git add .gitmodules
git rm --cached nvim/.config/nvim
git rm --cached nvim/.config/local/*
git rm --cached nvim/.config/local
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/goyo.vim
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/limelight.vim
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/minpac
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/nord-vim
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/nvim-lsp
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/typewriter-vim
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/vim-go
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/vim-js
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/vim-jsx-pretty
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/vim-ledger
git rm --cached nvim/.local/share/nvim/site/pack/minpac/opt/vimwiki
git rm --cached nvim/.local/share/nvim/site/pack/minpac/start/vim-mucomplete
git rm --cached nvim/.local/share/nvim/site/pack/minpac/start/vim-tmux-pilot
git submodule status
cd .git/modules
rm -rf nvim
cd ..
git add nvim/.local
git commit -m "[FEAT] removed all previous submodules"
git add .
git reset head .
gst
vim gitmodule.sh
nvim
vim
cd Project/dotfiles
ls -la
git config -f .gitmodules --get-regexp '^submodule\..*\.path$' |\
    while read path_key path\
    do\
        url_key=$(echo $path_key | sed 's/\.path/.url/')\
        url=$(git config -f .gitmodules --get "$url_key")\
        git submodule add $url $path\
    done
exit
